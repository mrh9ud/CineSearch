{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { FETCHED_RECOMMENDED_MOVIES, FETCHED_SEARCHED_MOVIES, NEW_USER_PERSISTED } from './actionType';\n\nconst moviesReducer = (oldState = [], action) => {\n  switch (action.type) {\n    case FETCHED_RECOMMENDED_MOVIES:\n      return action.payload;\n\n    case FETCHED_SEARCHED_MOVIES:\n      return action.payload;\n\n    default:\n      return oldState;\n  }\n};\n\nconst userReducer = (oldState = null, action) => {\n  switch (action.type) {\n    case NEW_USER_PERSISTED:\n      return action.payload;\n\n    case USER_EXISTS:\n      return oldState;\n\n    default:\n      return oldState;\n  }\n};\n\nconst rootReducer = combineReducers({\n  moviesArray: moviesReducer,\n  userObj: userReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/flatironschool/Documents/mod5/CineSearch/frontend/src/redux/reducer.js"],"names":["combineReducers","FETCHED_RECOMMENDED_MOVIES","FETCHED_SEARCHED_MOVIES","NEW_USER_PERSISTED","moviesReducer","oldState","action","type","payload","userReducer","USER_EXISTS","rootReducer","moviesArray","userObj"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,0BAAT,EAAqCC,uBAArC,EAA8DC,kBAA9D,QAAwF,cAAxF;;AAEA,MAAMC,aAAa,GAAG,CAACC,QAAQ,GAAC,EAAV,EAAcC,MAAd,KAAyB;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,0BAAL;AACI,aAAOK,MAAM,CAACE,OAAd;;AACJ,SAAKN,uBAAL;AACI,aAAOI,MAAM,CAACE,OAAd;;AACJ;AACI,aAAOH,QAAP;AANR;AAQH,CATD;;AAWA,MAAMI,WAAW,GAAG,CAACJ,QAAQ,GAAC,IAAV,EAAgBC,MAAhB,KAA2B;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKJ,kBAAL;AACI,aAAOG,MAAM,CAACE,OAAd;;AACJ,SAAKE,WAAL;AACI,aAAOL,QAAP;;AACJ;AACI,aAAOA,QAAP;AANR;AAQH,CATD;;AAWA,MAAMM,WAAW,GAAGX,eAAe,CAAC;AAChCY,EAAAA,WAAW,EAAER,aADmB;AAEhCS,EAAAA,OAAO,EAAEJ;AAFuB,CAAD,CAAnC;AAKA,eAAeE,WAAf","sourcesContent":["import { combineReducers } from 'redux'\nimport { FETCHED_RECOMMENDED_MOVIES, FETCHED_SEARCHED_MOVIES, NEW_USER_PERSISTED } from './actionType'\n\nconst moviesReducer = (oldState=[], action) => {\n    switch(action.type) {\n        case FETCHED_RECOMMENDED_MOVIES:\n            return action.payload\n        case FETCHED_SEARCHED_MOVIES:\n            return action.payload\n        default:\n            return oldState\n    }\n}\n\nconst userReducer = (oldState=null, action) => {\n    switch(action.type) {\n        case NEW_USER_PERSISTED:\n            return action.payload\n        case USER_EXISTS:\n            return oldState\n        default:\n            return oldState\n    }\n}\n\nconst rootReducer = combineReducers({\n    moviesArray: moviesReducer,\n    userObj: userReducer\n})\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}