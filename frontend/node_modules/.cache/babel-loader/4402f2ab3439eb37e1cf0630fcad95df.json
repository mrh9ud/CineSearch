{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Documents/mod5/CineSearch/frontend/src/components/MovieShow.js\";\nimport React from 'react';\nimport { Header, Card, Container } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\n\nclass MovieShow extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.findMovieToShow = () => {\n      return this.props.moviesArray.filter(movie => {\n        return movie.id.toString() === this.props.match.params.id;\n      });\n    };\n  }\n\n  render() {\n    let movie = this.findMovieToShow();\n    console.log(this.props.moviesArray);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, movie === [] ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Loading...\") : React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, movie[0].original_title)));\n  }\n\n}\n\nconst mapStateToProps = store => ({\n  moviesArray: store.moviesArray\n});\n\nexport default connect(mapStateToProps)(MovieShow);","map":{"version":3,"sources":["/Users/flatironschool/Documents/mod5/CineSearch/frontend/src/components/MovieShow.js"],"names":["React","Header","Card","Container","connect","MovieShow","Component","findMovieToShow","props","moviesArray","filter","movie","id","toString","match","params","render","console","log","original_title","mapStateToProps","store"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,QAAwC,mBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAEpCC,eAFoC,GAElB,MAAM;AACpB,aAAO,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,MAAvB,CAA+BC,KAAK,IAAI;AAC3C,eAAOA,KAAK,CAACC,EAAN,CAASC,QAAT,OAAwB,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBH,EAAvD;AACH,OAFM,CAAP;AAGH,KANmC;AAAA;;AAQpCI,EAAAA,MAAM,GAAG;AACL,QAAIL,KAAK,GAAG,KAAKJ,eAAL,EAAZ;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAa,KAAKV,KAAL,CAAWC,WAAxB;AACA,WAEI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACME,KAAK,KAAK,EAAV,GAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFE,GAIF,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBA,KAAK,CAAC,CAAD,CAAL,CAASQ,cAA1B,CADJ,CALJ,CAFJ;AAaH;;AAxBmC;;AA2BxC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAAEZ,EAAAA,WAAW,EAAEY,KAAK,CAACZ;AAArB,CAAL,CAA7B;;AAEA,eAAeL,OAAO,CAACgB,eAAD,CAAP,CAAyBf,SAAzB,CAAf","sourcesContent":["import React from 'react'\nimport { Header, Card, Container } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\n\nclass MovieShow extends React.Component {\n\n    findMovieToShow = () => {\n        return this.props.moviesArray.filter( movie => {\n            return movie.id.toString() === this.props.match.params.id\n        })\n    }\n\n    render() {\n        let movie = this.findMovieToShow()\n        console.log( this.props.moviesArray )\n        return (\n\n            <React.Fragment>\n                { movie === [] \n                ?\n                <p>Loading...</p>\n                :\n                <Container>\n                    <Header as=\"h1\">{movie[0].original_title}</Header>\n                </Container>\n                }\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = store => ({ moviesArray: store.moviesArray })\n\nexport default connect(mapStateToProps)(MovieShow)"]},"metadata":{},"sourceType":"module"}